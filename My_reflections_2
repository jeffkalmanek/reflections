My reflections 2
Q - What happens when you initialize a repository? Why do you need to do it?
A - it creates a repository and starts tracking the files.
Q - How is the staging area different from the working directory and the repository? What value do you think it offers?
A - the staging area contains the files that will be committed.  The value it offers is to control which files are part of the logical change.
Info - instructions on how to configure GIT are saved here
	Downloading necessary files

Save this file in your home directory with the name git-completion.bash.
Save this file in your home directory with the name git-prompt.sh.
Download bash_profile_course from the Downloadables section.
If you already have a file in your home directory named .bash_profile, copy the content from bash_profile_course and paste it at the bottom of .bash_profile. Otherwise, move bash_profile_course to your home directory and rename it to .bash_profile. If you use Linux, you may need to name this file .bashrc instead of .bash_profile. (If you're curious to learn more about how bash prompts work, see this page.)
Make sure you can start your editor from the terminal

If you use Sublime, you can do this by add the following line to your .bash_profile (you may need to change the path if Sublime is installed in a different location for you):

alias subl="/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl"
Making Git configurations

Run the following Git configuration commands. The first one will need to be modified if you are using a text editor other than Sublime, or if Sublime is installed in another location for you. See this page for the correct command for a couple of other popular text editors. For any other editor, you'll need to enter the command you use to launch that editor from the terminal.

git config --global core.editor "'/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl' -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3
(Instead of the first command, you may be able to use the simpler git config --global core.editor "subl -n -w" as shown in the video, but many students have found this does not work for them.)

Restart the terminal

You'll need to close and re-open the terminal before all your changes take effect.s

Q - How can you use the staging area to make sure you have one commit per logical change?
A - only add the files to the staging area once your logical change is complete.

Q - What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A - trying out new features, or if creating a variation for a different customer

Q - How do the diagrams help you visualize the branch structure?
A - they show how the branches and commits connect to each other.

Q - What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
A - auto merge is good in that it completes the operation without effort.  But bad if there is an ambiguous change.  Manuel is good to resolve ambiguity, especialy when created by two different people.

